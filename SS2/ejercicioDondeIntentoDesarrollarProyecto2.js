/*Skylab Airlines! ‚úàÔ∏èüõ©

(Los datos de los vuelos est√°n al final del enunciado, pod√©is usarlos en vuestro c√≥digo)

Programa una inferfaz de usuario para una aerolinea (por terminal...). Esta aerolinea dispondr√° de 10 vuelos para el dia de hoy, para empezar, estos vuelos estar√°n declarados de manera global, cuando se llame a la funci√≥n:

Se preguntar√° por el nombre de usuario y dar√° la bienvenida.
El usuario visualizar√° todos los vuelos disponibles de una forma amigable: El vuelo con origen: Barcelona, y destino: Madrid tiene un coste de XXXX‚Ç¨ y no realiza ninguna escala.
A continuaci√≥n, el usuario ver√° el coste medio de los vuelos.
Tambi√©n podr√° ver cuantos vuelos efect√∫an escalas.
Y, sabiendo que los ultimos 5 vuelos (los √∫ltimos 5 ID's) son los √∫ltimos del d√≠a, muestra al usuario sus destinos.
*/
var idFly1 = 00;
var idFly2 = 01;
var idFly3 = 02;
var idFly4 = 03;
var idFly5 = 04;
var idFly6 = 05;
var idFly7 = 06;
var idFly8 = 07;
var idFly9 = 08;
var idFly10 = 09;

function booking(id, nameUser, to, from, cost, scale){
	var yourName = prompt("What's your name?");
	var name = yourName;
	document.write("We hope you enjoy travelling with us")
    //As√≠ creamos las properties. Ha de ir en orden como tenemos los par√°metros
    this.idFly = id;
    this.nameUser = nameUser;
    this.to = to;
    this.from = from;
    this.cost = cost;
    this.scale = scale;
    


//As√≠ creamos los values de las properties, que ir√°n ordenados con ellas. Ej fullName = "Tony Stark", city="XI"...




var flights = [
{
	id: 00, 
	to: "New York", 
	from: "Barcelona", 
	cost: 700,
	scale: false,
},

{
	id: 01, 
	to: "Los Angeles", 
	from: "Madrid", 
	cost: 1100,
	scale: true
},

{
	id: 02, 
	to: "Paris", 
	from: "Barcelona", 
	cost: 210,
	scale: false
},

{
	id: 03, 
	to: "Roma", 
	from: "Barcelona", 
	cost: 150,
	scale: false
},

{
	id: 04, 
	to: "London", 
	from: "Madrid", 
	cost: 200,
	scale: false
},


//Estos son los √∫ltimos vuelos del d√≠a
{
	id: 05, 
	to: "Madrid", 
	from: "Barcelona", 
	cost: 90,
	scale: false
},


{
	id: 06, 
	to: "Tokyo", 
	from: "Madrid", 
	cost: 1500,
	scale: true
},


{
	id: 07, 
	to: "Shangai", 
	from: "Barcelona", 
	cost: 800,
	scale: true
},


{
	id: 08, 
	to: "Sydney", 
	from: "Barcelona", 
	cost: 150,
	scale: true
},


{
	id: 09, 
	to: "Tel-Aviv", 
	from: "Madrid", 
	cost: 150,
	scale: false}
]
  for ( var i=0 ; i < flights[i].booking.length; i++) {
    console.log(fligths[0]);

}





//console.log(flights[].to) 
//output: New York


}
booking();



